{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "location": {
          "type": "string"
      },
      "imageName":{
           "type": "string"
      },
      "imageResourceGroup":{
          "type": "string"
      },
      "vNetResourceGroup": {
           "type": "string"
      },
      "subnetName": {
          "type": "string"
      },
      "virtualNetworkName": {
          "type": "string"
      },
      "customVmName": {
          "type": "string"
      },
      "virtualMachineRG": {
          "type": "string"
      },
      "osDiskType": {
          "type": "string"
      },
      "virtualMachineSize": {
          "type": "string"
      },
      "adminUsername": {
          "type": "string"
      },
      "adminPassword": {
          "type": "securestring"
      },
      "availabilitySetName": {
          "type": "string"
      },
      "OMSWorkSpaceId": {
        "type": "string",
        "metadata": {
          "description": "OMS workspace ID for OMS extention"
        }
      },
      "OMSWorkspaceKey": {
        "type": "string",
        "metadata": {
          "description": "OMS workspace key for OMS extention"
        }
      },
      "domainToJoin": {
        "type": "string",
        "metadata": {
          "description": "The FQDN of the AD domain"
        }
      },
      "domainUsername": {
        "type": "string",
        "metadata": {
          "description": "Username of the account on the domain"
        }
      },
      "domainPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Password of the account on the domain"
        }
      },
      "domainJoinOptions": {
        "type": "int",
        "defaultValue": 1,
          "metadata": {
          "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
        }
      },
      "loadBalancerName": {
        "type": "string",
        "metadata": {
          "description": "loadBalancerName"
        }
       },
       "privateIPAddress": {
        "type": "string",
        "metadata": {
          "description": "privateIPAddress"
          }
        },
        "diagStorageAccountName": {
            "type": "string",
            "metadata": {
              "description": "diagStorageAccountName"
              }
        }
  },
  "variables": {
      "networkInterfaceName":"[concat(parameters('customVmName'),'-nic')]",
      "lbID": "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName'))]",
      "vnetName": "[parameters('virtualNetworkName')]",
      "subnetRef": "[resourceId(parameters('vNetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]",
      "imageRef": "[resourceId(parameters('imageResourceGroup'), 'Microsoft.Compute/images', parameters('imageName'))]"
      
  },
  "resources": [
      {
          "name": "[variables('networkInterfaceName')]",
          "type": "Microsoft.Network/networkInterfaces",
          "apiVersion": "2018-04-01",
          "location": "[parameters('location')]",
          "dependsOn": [],
          "properties": {
              "ipConfigurations": [
                  {
                      "name": "ipconfig1",
                      "properties": {
                          "subnet": {
                              "id": "[variables('subnetRef')]"
                          },
                          "privateIPAllocationMethod": "Static",
                          "privateIPAddress": "[parameters('privateIPAddress')]",
                          "loadBalancerBackendAddressPools": [
                              {
                                "id": "[concat(variables('lbID'), '/backendAddressPools/loadBalancerBackEnd')]"
                              }
                            ]
                      }
                  }
              ]
          },
          "tags": {}
      },
      {
          "name": "[parameters('customVmName')]",
          "type": "Microsoft.Compute/virtualMachines",
          "apiVersion": "2018-06-01",
          "location": "[parameters('location')]",
          "dependsOn": [
              "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
          ],
          "properties": {
              "hardwareProfile": {
                  "vmSize": "[parameters('virtualMachineSize')]"
              },
              "storageProfile": {
                  "osDisk": {
                     "createOption": "FromImage"
                   
                  },
                  "imageReference": {
                      "id": "[variables('imageRef')]"
                  }
              },
              "networkProfile": {
                  "networkInterfaces": [
                      {
                          "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                      }
                  ]
              },
              "osProfile": {
                  "computerName": "[parameters('customVmName')]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "adminPassword": "[parameters('adminPassword')]",
                  "windowsConfiguration": {
                      "enableAutomaticUpdates": true,
                      "provisionVmAgent": true
                  }
              },
              "availabilitySet": {
                  "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
              },
              "diagnosticsProfile": {
                "bootDiagnostics": {
                  "enabled": true,
                  "storageUri": "[concat(concat('http://', toLower(parameters('diagStorageAccountName'))), '.blob.core.windows.net')]"
                }
              }  
          },
          "tags": {}
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(parameters('customVmName'),'/OMSExtension')]",
        "apiVersion": "2017-12-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('customVmName'))]"
        ],
        "properties": {
        "publisher": "Microsoft.EnterpriseCloud.Monitoring",
        "type": "MicrosoftMonitoringAgent",
        "typeHandlerVersion": "1.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
            "workspaceId": "[parameters('OMSWorkSpaceId')]"
        },
        "protectedSettings": {
            "workspaceKey": "[parameters('OMSWorkspaceKey')]"
        }
        }
      },
      {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('customVmName'),'/joindomain')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('customVmName'))]"
            ],
            "properties": {
            "publisher": "Microsoft.Compute",
            "type": "JsonADDomainExtension",
            "typeHandlerVersion": "1.3",
            "autoUpgradeMinorVersion": true,
            "settings": {
                "Name": "[parameters('domainToJoin')]",
                "User": "[concat(parameters('domainToJoin'), '\\', parameters('domainUsername'))]",
                "Restart": "true",
                "Options": "[parameters('domainJoinOptions')]"
            },
            "protectedSettings": {
                "Password": "[parameters('domainPassword')]"
            }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('customVmName'),'/NetworkWatcher')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('customVmName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.NetworkWatcher",
                "type": "NetworkWatcherAgentWindows",
                "typeHandlerVersion": "1.4",
                "autoUpgradeMinorVersion": true
            }
        }

  ],
  "outputs": {
      "adminUsername": {
          "type": "string",
          "value": "[parameters('adminUsername')]"
      }
  }
}